// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import btcindexersrv "github.com/darkknightbk52/btc-indexer/proto"
import mock "github.com/stretchr/testify/mock"

// BtcIndexer_SyncStream is an autogenerated mock type for the BtcIndexer_SyncStream type
type BtcIndexer_SyncStream struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *BtcIndexer_SyncStream) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Recv provides a mock function with given fields:
func (_m *BtcIndexer_SyncStream) Recv() (*btcindexersrv.SyncRequest, error) {
	ret := _m.Called()

	var r0 *btcindexersrv.SyncRequest
	if rf, ok := ret.Get(0).(func() *btcindexersrv.SyncRequest); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*btcindexersrv.SyncRequest)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RecvMsg provides a mock function with given fields: _a0
func (_m *BtcIndexer_SyncStream) RecvMsg(_a0 interface{}) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Send provides a mock function with given fields: _a0
func (_m *BtcIndexer_SyncStream) Send(_a0 *btcindexersrv.SyncResponse) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*btcindexersrv.SyncResponse) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendMsg provides a mock function with given fields: _a0
func (_m *BtcIndexer_SyncStream) SendMsg(_a0 interface{}) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
