// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import btcjson "github.com/btcsuite/btcd/btcjson"

import mock "github.com/stretchr/testify/mock"
import wire "github.com/btcsuite/btcd/wire"

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// GetBlockHeaderVerboseByHash provides a mock function with given fields: hash
func (_m *Client) GetBlockHeaderVerboseByHash(hash string) (*btcjson.GetBlockHeaderVerboseResult, error) {
	ret := _m.Called(hash)

	var r0 *btcjson.GetBlockHeaderVerboseResult
	if rf, ok := ret.Get(0).(func(string) *btcjson.GetBlockHeaderVerboseResult); ok {
		r0 = rf(hash)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*btcjson.GetBlockHeaderVerboseResult)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(hash)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetBlockHeaderVerboseByHeight provides a mock function with given fields: height
func (_m *Client) GetBlockHeaderVerboseByHeight(height int64) (*btcjson.GetBlockHeaderVerboseResult, error) {
	ret := _m.Called(height)

	var r0 *btcjson.GetBlockHeaderVerboseResult
	if rf, ok := ret.Get(0).(func(int64) *btcjson.GetBlockHeaderVerboseResult); ok {
		r0 = rf(height)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*btcjson.GetBlockHeaderVerboseResult)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(height)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetRawBlock provides a mock function with given fields: hash
func (_m *Client) GetRawBlock(hash string) (*wire.MsgBlock, error) {
	ret := _m.Called(hash)

	var r0 *wire.MsgBlock
	if rf, ok := ret.Get(0).(func(string) *wire.MsgBlock); ok {
		r0 = rf(hash)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*wire.MsgBlock)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(hash)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
